{"is_source_file": true, "format": "JavaScript", "description": "Source code for an Express-based REST API server for a Todo application. Implements CRUD endpoints for managing todos stored in a SQLite database, with logic for database connection via a configuration file or fallback path.", "external_files": ["node_modules/express", "node_modules/cors", "path", "node_modules/sqlite3", "fs"], "external_methods": ["express()", "cors()", "path.resolve()", "fs.existsSync()", "fs.readFileSync()", "fs.mkdirSync()", "sqlite3.Database()"], "published": ["createServer"], "classes": [], "methods": [{"name": "createServer()", "description": "Initializes and starts an Express server providing CRUD APIs for Todo items backed by a SQLite database.", "scope": "", "scopeKind": ""}, {"name": "AnonymousFunction0f2e4c4c0100(err)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunction0f2e4c4c0200(err)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "AnonymousFunction0f2e4c4c0300(err)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "requireNumericId(req, res, next)", "scope": "createServer", "scopeKind": "function", "description": "unavailable"}, {"name": "sendError(res, status, code, message, details)", "scope": "createServer", "scopeKind": "function", "description": "unavailable"}], "calls": ["app.use()", "sendError()", "fs.existsSync()", "fs.readFileSync()", "path.resolve()", "fs.mkdirSync()", "new sqlite3.Database()", "db.serialize()", "db.run()", "db.get()", "app.get()", "app.post()", "app.put()", "app.delete()", "app.listen()"], "search-terms": ["Express server", "Todo CRUD API", "SQLite database connection", "db_connection.txt parsing", "Database fallback path", "API route handlers", "Health endpoint"], "state": 2, "file_id": 13, "knowledge_revision": 64, "git_revision": "cd4477067c986fb08cfa6a1dd5b9ed659d0e4548", "revision_history": [{"27": ""}, {"64": "cd4477067c986fb08cfa6a1dd5b9ed659d0e4548"}], "ctags": [{"_type": "tag", "name": "AnonymousFunction0f2e4c4c0100", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^    db.run('INSERT INTO todos (text) VALUES (?)', [cleanText], function (err) {$/", "language": "JavaScript", "kind": "function", "signature": "(err)"}, {"_type": "tag", "name": "AnonymousFunction0f2e4c4c0200", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^    db.run(`UPDATE todos SET ${fields.join(', ')} WHERE id = ?`, values, function (err) {$/", "language": "JavaScript", "kind": "function", "signature": "(err)"}, {"_type": "tag", "name": "AnonymousFunction0f2e4c4c0300", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^    db.run('DELETE FROM todos WHERE id = ?', [id], function (err) {$/", "language": "JavaScript", "kind": "function", "signature": "(err)"}, {"_type": "tag", "name": "cors", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^const cors = require('cors');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "createServer", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^function createServer() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "createServer", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^module.exports = { createServer };$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "dbDiscovery", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^  let dbDiscovery = { source: 'fallback', fileChecked: dbConnFile, parseNote: '' };$/", "language": "JavaScript", "kind": "class", "scope": "createServer", "scopeKind": "class"}, {"_type": "tag", "name": "express", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^const express = require('express');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "fileChecked", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^  let dbDiscovery = { source: 'fallback', fileChecked: dbConnFile, parseNote: '' };$/", "language": "JavaScript", "kind": "property", "scope": "createServer.dbDiscovery", "scopeKind": "class"}, {"_type": "tag", "name": "fs", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^const fs = require('fs');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "parseNote", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^  let dbDiscovery = { source: 'fallback', fileChecked: dbConnFile, parseNote: '' };$/", "language": "JavaScript", "kind": "property", "scope": "createServer.dbDiscovery", "scopeKind": "class"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^const path = require('path');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "requireNumericId", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^  function requireNumericId(req, res, next) {$/", "language": "JavaScript", "kind": "function", "signature": "(req, res, next)", "scope": "createServer", "scopeKind": "function"}, {"_type": "tag", "name": "sendError", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^  function sendError(res, status, code, message, details) {$/", "language": "JavaScript", "kind": "function", "signature": "(res, status, code, message, details)", "scope": "createServer", "scopeKind": "function"}, {"_type": "tag", "name": "source", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^  let dbDiscovery = { source: 'fallback', fileChecked: dbConnFile, parseNote: '' };$/", "language": "JavaScript", "kind": "property", "scope": "createServer.dbDiscovery", "scopeKind": "class"}, {"_type": "tag", "name": "sqlite3", "path": "/home/kavia/workspace/code-generation/simple-todo-application-36788-36797/todo_frontend/server/index.js", "pattern": "/^const sqlite3 = require('sqlite3').verbose();$/", "language": "JavaScript", "kind": "constant"}], "hash": "a8251f6a80dab5ca21973a87934fccf0", "format-version": 4, "code-base-name": "todo_frontend", "filename": "todo_frontend/server/index.js", "fields": [{"name": "module.exports = { createServer };", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}, {"name": "let dbDiscovery = { source: 'fallback', fileChecked: dbConnFile, parseNote: '' };", "scope": "createServer.dbDiscovery", "scopeKind": "class", "description": "unavailable"}]}